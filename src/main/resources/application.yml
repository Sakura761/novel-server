spring:
  datasource:
    url: jdbc:mysql://localhost:3306/novel_backend?useSSL=false&serverTimezone=UTC
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver

  # 文件上传配置
  servlet:
    multipart:
      # 单个文件最大大小
      max-file-size: 2MB
      # 总上传文件最大大小
      max-request-size: 10MB
  elasticsearch:
    uris: http://localhost:9200
  data:
    redis:
      host: 127.0.0.1
      port: 6379
      password: 123456
      database: 0
      timeout: 3000ms
      connect-timeout: 3000ms
      client-type: lettuce
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms
          time-between-eviction-runs: 30000ms
        shutdown-timeout: 200ms
        cluster:
          refresh:
            adaptive: true
            period: 30s

# MyBatis配置
mybatis:
  # 指定XML映射文件的位置
  mapper-locations: classpath:mapper/*.xml
  # 指定实体类包路径
  type-aliases-package: com.sakura.novel_server.entity
  configuration:
    # 开启驼峰命名转换
    map-underscore-to-camel-case: true
    # 开启延迟加载
    lazy-loading-enabled: true
    # 设置日志实现
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

# PageHelper 分页插件配置
pagehelper:
  # 指定数据库方言
  helper-dialect: mysql
  # 分页合理化参数，当pageNum<=0时查询第一页，pageNum>pages时查询最后一页
  reasonable: true
  # 支持通过Mapper接口参数来传递分页参数
  support-methods-arguments: true
  # 参数映射配置
  params: count=countSql

# Swagger API文档配置
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  packages-to-scan: com.sakura.novel_server.controller

# GitHub配置（用于图片上传到jsdelivr CDN）
github:
  # GitHub访问令牌，需要在GitHub设置中生成
  token: ${GITHUB_TOKEN:}
  # GitHub仓库所有者
  owner: ${GITHUB_OWNER:Sakura761}
  # GitHub仓库名称
  repo: ${GITHUB_REPO:novel-storage}
# JWT Configuration
# 密钥，生成一个足够长的随机字符串，不要泄露
jwt:
  # JWT密钥（生产环境中应该使用更安全的密钥）- 至少32个字符
  secret: novel_server_jwt_secret_key_2024_sakura_novel_platform_secure_key_for_hmac_sha256_algorithm
  # Token过期时间（毫秒）24小时 = 24 * 60 * 60 * 1000
  expiration: 86400000

minio:
  endpoint: http://localhost:9000
  access-key: minioadmin
  secret-key: minioadmin
  bucket-name: novels # 您希望文件上传到的存储桶名称